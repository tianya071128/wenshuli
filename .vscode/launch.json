{
  // 使用 IntelliSense 了解相关属性。
  // 悬停以查看现有属性的描述。
  // 欲了解更多信息，请访问: https://go.microsoft.com/fwlink/?linkid=830387
  "version": "0.2.0",
  "configurations": [
    /**
     * 启动 webpack 调试
     */
    {
      "name": "webpack 调试",
      // 请求配置类型。 launch(启动): 启动一个进程 | attach(附加): 见下面的配置
      "request": "launch",
      // 传递给运行时可执行文件的可选参数。 -- 相当于执行 npm run-script build
      "runtimeArgs": ["run-script", "build"],
      // 运行时的程序, 默认为 node. 此处可为 npm
      "runtimeExecutable": "npm",
      // 自动跳过这些 glob 模式覆盖的文件。
      "skipFiles": ["<node_internals>/**"],
      // 被调试程序的工作目录的绝对路径。 如果您已设置 localRoot(包含程序的本地目录的路径。默认为 null)则 cwd 将匹配该值，否则返回到您的 workspaceFolder(当前配置根文件夹路径)
      "cwd": "${workspaceFolder}/client/demo/webpack",
      "type": "pwa-node"
    },
    {
      "type": "pwa-node",
      "request": "launch",
      "name": "node调试单文件",
      // 自动跳过这些 glob 模式覆盖的文件。
      "skipFiles": [
        "<node_internals>/**", // 跳过 Node 的核心模块
        "${workspaceFolder}/**/node_modules/**/*.js", // 跳过 node_modules 的模块
        "!${workspaceFolder}/**/node_modules/mime-types/**/*.js" // 不跳过 node_modules 中 mime-types 模块
      ],
      /**
       * 程序的绝对路径 - 启动文件 - 相当与 node {program} 启动
       * vscode 的预定义变量，参考：https://code.visualstudio.com/docs/editor/variables-reference
       */
      "program": "${file}",
      /**
       * 传递给程序以进行调试的参数，node 中 args 参考 http://nodejs.cn/api/process.html#processargv
       * 如下添加的 args 参数相当于启动命令（ D:\node\node.exe .\client\docs\06_工程化\01_vscode\vscode调试\01_测试args.js Administrator test）
       * node [options] [V8 options] [script.js | -e "script" | -] [--] [arguments] -- args 参数放在 node 启动命令的最后 [arguments]
       * ${env:USERNAME}：用于访问环境变量 USERNAME，在这里是 Administrator
       *
       */
      "args": ["${env:USERNAME}", "test"],
      // 如果添加了这个，启动命令（D:\node\node.exe --no-experimental-repl-await .\client\docs\06_工程化\01_vscode\vscode调试\01_测试args.js Administrator test）
      // "runtimeArgs": ["--no-experimental-repl-await"]
      // args 和 env 使用可见 client\docs\06_工程化\01_vscode\vscode调试\01_测试args和env.js 文件
      "env": {
        "BASE_URL": "URL"
      }
    },
    /**
     * 支持 npm 脚本
     * 例如启动 server 文件夹中的 npm run dev
     */
    {
      "name": "npm script",
      // 请求配置类型。 launch(启动): 启动一个进程 | attach(附加): 见下面的配置
      "request": "launch",
      // 传递给运行时可执行文件的可选参数。 -- 相当于执行 npm run-script dev
      "runtimeArgs": ["run-script", "dev"],
      // 运行时的程序, 默认为 node. 此处可为 npm
      "runtimeExecutable": "npm",
      // 自动跳过这些 glob 模式覆盖的文件。
      "skipFiles": ["<node_internals>/**"],
      // 被调试程序的工作目录的绝对路径。 如果您已设置 localRoot(包含程序的本地目录的路径。默认为 null)则 cwd 将匹配该值，否则返回到您的 workspaceFolder(当前配置根文件夹路径)
      "cwd": "${workspaceFolder}/sever",
      "type": "pwa-node"
    },
    /**
     * 支持 nodemon 等启动程序启动 -- 可见 launch 启动 nodemon https://code.visualstudio.com/docs/nodejs/nodejs-debugging#_restarting-debug-sessions-automatically-when-source-is-edited
     * 官方文档中说按下停止调试会话只会断开调试, 而 nodemon(和 node.js) 将继续运行. 但是在 1.62.3(2021/11/30) 中, 如果 "request": "launch", 那么 nodemon 也会断开
     * 例如启动 server 文件夹中的 app.js
     */
    {
      "console": "integratedTerminal",
      // 控制何时打开内部调试控制台。
      "internalConsoleOptions": "neverOpen",
      "name": "nodemon 启动",
      // 程序的绝对路径 - 启动文件
      "program": "${workspaceFolder}\\sever\\app.js",
      "request": "launch",
      // 如果我们失去连接，请尝试重新连接到程序。如果设置为'true'，我们将每秒尝试一次，直到永远。您可以通过在对象中指定'delay'和'maxAttempts'来自定义尝试的间隔和最大次数。
      "restart": true,
      // 运行时的程序, 默认为 node. 此处可为 nodemon
      "runtimeExecutable": "nodemon",
      // 调试时自动跳过这些 glob 模式覆盖的文件。
      "skipFiles": ["<node_internals>/**"],
      "type": "pwa-node"
    }
  ]
}
